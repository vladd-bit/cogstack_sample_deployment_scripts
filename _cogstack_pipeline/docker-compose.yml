version: "3.5"
services:
 #---------------------------------------------------------------------------#
 # Postgres container with sample data                                       #
 #---------------------------------------------------------------------------#
 databank-db:
   image: postgres:13-alpine
   shm_size: 2048mb
   volumes:
     - ../data/:/data  # mount the folder containing the DB csv files
     - ./scripts/create_databank_db.sh:/docker-entrypoint-initdb.d/create_databank_db.sh:ro
     - databank-db-vol:/var/lib/postgresql/data
   environment:
     - POSTGRES_USER=admin
     - POSTGRES_PASSWORD=admin
     - POSTGRES_DATABANK_DB=project_data
   ports:
     - 5433:5432
 
 #---------------------------------------------------------------------------#
 # CogStack-Pipeline related containers                                      #
 #---------------------------------------------------------------------------#
 cogstack-pipeline:
   # build:
   #   context: ./
   #   dockerfile: cogstack\
   #   shm_size: 128mb
   #   args :
   #     -t : cogstack:latest
   environment:
     - SERVICES_USED=cogstack-job-repo:5432,databank-db:5432,elasticsearch-1:9200
     - LOG_LEVEL=info
     - LOG_FILE_NAME=cogstack_job_log
     - FILE_LOG_LEVEL=off
     - COG_PATH=/cogstack# used in run_pipeline.sh to point at the location of cogstack
     - COG_CONFIG_PATH=/cogstack/cogstack_conf
   volumes:
     - ./cogstack/conf:/cogstack/cogstack_conf:ro  # <-- cogstack properties folder
     - ./cogstack/run_pipeline.sh:/cogstack/run_pipeline.sh:ro
     - ./gate/app:/gate/app
   image : cogstacksystems/cogstack-pipeline-gate:latest
   depends_on:
     - cogstack-job-repo
     - databank-db
     - elasticsearch-1
   # java [parameters] -jar cogstack-*.jar <directory>
   # The run_pipeline.sh passes the two arguments and starts cogstack with the two arguments .jar file and job conf directory
   command: /cogstack/run_pipeline.sh /cogstack/cogstack-*.jar /cogstack/cogstack_conf
 
 cogstack-job-repo:
    image: postgres:13-alpine 
    shm_size: 128mb
    volumes:
      - ./scripts/create_pgsql_job_repo.sh:/docker-entrypoint-initdb.d/create_pgsql_job_repo.sh:ro
      - cogstack-job-vol:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=cogstack
      - POSTGRES_PASSWORD=cogstack
      - POSTGRES_COGSTACK_DB=cogstack_job_repo
    depends_on:
      - databank-db
    ports:
      - 5432:5432

#---------------------------------------------------------------------------#
# Elasticsearch cluster                                                     #
#---------------------------------------------------------------------------#
 elasticsearch-1:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.0
    environment:
      - cluster.name=docker-cluster
    #  - ELASTIC_USER:"admin"
     # - ELASTIC_PASSWORD:"admin"
     # - bootstrap.memory_lock=true
     # - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - elasticsearch-vol-1:/usr/share/elasticsearch/data
    depends_on:
      - cogstack-job-repo
    #command: "sysctl -w vm.max_map_count=262144"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200  
#---------------------------------------------------------------------------#
# Kibana webapp                                                             #
#---------------------------------------------------------------------------#
 kibana:
    image: docker.elastic.co/kibana/kibana-oss:7.10.0
    environment:
      SERVER_NAME: kibana.server
      ELASTICSEARCH_HOSTS: "http://elasticsearch-1:9200"
    restart: always
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
      - elasticsearch-vol-1:/usr/share/elasticsearch/data
    depends_on:
      - elasticsearch-1
    ports:
      - "5601:5601"
#---------------------------------------------------------------------------#
# Docker networks.                                                          #
#---------------------------------------------------------------------------#
networks:
  esnet:
    driver: bridge
    name : esnet-ext
  cognet:
    driver: bridge

#---------------------------------------------------------------------------#
# Docker named volumes                                                      #
#---------------------------------------------------------------------------#
volumes:
  databank-db-vol:
    driver: local
  cogstack-job-vol:
    driver: local
  elasticsearch-vol-1:
    driver: local
